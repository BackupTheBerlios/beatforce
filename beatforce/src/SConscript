

Import('env');

if env['ui'] == 'sdltk':
        print "Using 'sdltk' as main user interface!"
        env.SConscript(['../lib/src/SConscript'])
        env.SConscript(['ui/sdltk/SConscript'])        
        env.Append(CCFLAGS = '-Isrc/ui/sdltk/')
        env.Append(CCFLAGS = '-Isrc')
        env.Append(CCFLAGS = '-I/usr/include/libxml2')
        env.Append(CCFLAGS = '-Wall')
        env.Append(CCFLAGS = '-g')
        env.Append(CCFLAGS = '-pg')
        env.Append(LINKFLAGS = '-pg')
        beatforce=env.Program('beatforce',
                [
                        'playlist.c',
                        'songdb.c',
                        'main.c',
                        'effect.c',
                        'player.c',
                        'mixer.c',
                        'debug.c',
                        'osa.c',
                        'audio_output.c',
                        'llist.c',
                        'ringbuffer.c',
                        'sampler.c',
                        'input.c',
                        'output.c',
                        'plugin.c',
                        'theme.c',
                        'event.c',
                        'configfile.c'
                ],
                        LIBS=['SDL','SDL_image','xml2','ui','sdltk','dl','m'],
                        LIBPATH=['../lib/src/','ui/sdltk'])      
elif env['ui'] == 'gtk':
        print "Using 'gtk' as main user interface!"
        config = env.Configure()
                
        env.ParseConfig('gtk-config --cflags --libs')                   
        
        # check for gtk/gtk.h
        if not config.CheckCHeader('gtk/gtk.h'):
           print "You need 'gtk/gtk.h' to compile this program"
           Exit(1)
        env=config.Finish()

        env.SConscript(['ui/gtk/SConscript'])    
        env.Append(CCFLAGS = '-Isrc/ui/gtk/')
        env.Append(CCFLAGS = '-Isrc')
        env.Append(CCFLAGS = '-I/usr/include/libxml2')
        env.Append(CCFLAGS = '-I/usr/include/gtk-1.2')
        env.Append(CCFLAGS = '-I/usr/include/glib-1.2')
        env.Append(CCFLAGS = '-I/usr/lib/glib/include')

        beatforce=env.Program('beatforce',
                [
                        'playlist.c',
                        'songdb.c',
                        'main.c',
                        'effect.c',
                        'player.c',
                        'mixer.c',
                        'debug.c',
                        'osa.c',
                        'audio_output.c',
                        'llist.c',
                        'ringbuffer.c',
                        'sampler.c',
                        'input.c',
                        'output.c',
                        'event.c',
                        'plugin.c',
                        'configfile.c'
                ],
                        LIBS=['m','xml2','ui','gtk','gdk','glib','dl','SDL'],
                        LIBPATH=['/usr/lib/gtk/','ui/gtk/'])      
elif env['ui'] == 'gtk-2.0':
        print "Using 'gtk-2.0' as main user interface!"
        config = env.Configure()
                
#        env.ParseConfig('gtk-config --cflags --libs')                   
        
        # check for gtk/gtk.h
#        if not config.CheckCHeader('gtk/gtk.h'):
#           print "You need 'gtk/gtk.h' to compile this program"
#           Exit(1)
#        env=config.Finish()

        env.SConscript(['ui/gtk-2.0/SConscript'])    
        env.Append(CCFLAGS = '-Isrc/ui/gtk-2.0/')
        env.Append(CCFLAGS = '-Isrc')
        env.Append(CCFLAGS = '-I/usr/include/libxml2')
        env.Append(CCFLAGS = '-I/usr/include/atk-1.0')
        env.Append(CCFLAGS = '-I/usr/include/gtk-2.0')
        env.Append(CCFLAGS = '-I/usr/include/glib-2.0')
        env.Append(CCFLAGS = '-I/usr/include/pango-1.0')
        env.Append(CCFLAGS = '-I/usr/lib/glib-2.0/include/')
        env.Append(CCFLAGS = '-I/usr/lib/gtk-2.0/include/')

        beatforce=env.Program('beatforce',
                [
                        'playlist.c',
                        'songdb.c',
                        'main.c',
                        'effect.c',
                        'player.c',
                        'mixer.c',
                        'debug.c',
                        'osa.c',
                        'audio_output.c',
                        'llist.c',
                        'ringbuffer.c',
                        'sampler.c',
                        'event.c',
                        'input.c',
                        'output.c',
                        'theme.c',
                        'plugin.c',
                        'configfile.c'
                ],
                        LIBS=['m','xml2','ui','gtk-x11-2.0','gdk-x11-2.0','glib-2.0','gobject-2.0','dl'],
                        LIBPATH=['/usr/lib/gtk-2.0/','ui/gtk-2.0/'])      
elif env['ui'] == 'qt':
        print "Using 'qt' as main user interface!"
        env.SConscript(['ui/qt/SConscript'])    
        env.Append(CCFLAGS = '-Isrc/ui/qt/')
        env.Append(CCFLAGS = '-Isrc')
        env.Append(CCFLAGS = '-I/usr/include/libxml2')
        beatforce=env.Program('beatforce',
                [
                        'playlist.c',
                        'songdb.c',
                        'main.c',
                        'event.c',
                        'effect.c',
                        'player.c',
                        'mixer.c',
                        'debug.c',
                        'osa.c',
                        'audio_output.c',
                        'llist.c',
                        'ringbuffer.c',
                        'sampler.c',
                        'input.c',
                        'output.c',
                        'plugin.c',
                        'configfile.c'
                ],
                        LIBS=['m','SDL','fftw3','xml2','ui','qt-mt'],
                        LIBPATH=['/usr/lib/qt3/lib/','ui/qt/'])      




Default(beatforce)



